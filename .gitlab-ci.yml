stages:
  - test
  - build
  - delivery
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA

unit-test:
  stage: test
  image: ssi-registry.teda.th/ssi/ssi-core-api/core:1.0.0
  script:
    - make download-module
    - make test
  environment:
    name: staging
  only:
    - merge_requests
  tags:
    - k8s-stg-runner

build-delivery-staging:
  stage: build
  image: docker:19.03.15
  services:
    - name: docker:18.09.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -f staging.Dockerfile -t $TAG_COMMIT -t $TAG_LATEST .
    - docker push $TAG_LATEST
    - docker push $TAG_COMMIT
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner

deploy-abci-staging:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record statefulset/blockchain blockchain=$TAG_COMMIT -n core-api
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner
  when: manual

deploy-did-staging:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/did did=$TAG_COMMIT -n core-api
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner
  when: manual

deploy-vc-status-staging:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/vc-status vc-status=$TAG_COMMIT -n core-api
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner
  when: manual

deploy-vc-verify-staging:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/vc-verify vc-verify=$TAG_COMMIT -n core-api
  environment:
    name: staging
  only:
    - staging
  tags:
    - k8s-stg-runner
  when: manual

delivery-production:
  stage: delivery
  image: docker:19.03.15
  services:
    - name: ddocker:18.09.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    STAGING_IMAGE: $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHORT_SHA
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $STAGING_IMAGE
    - docker tag $STAGING_IMAGE $TAG_LATEST
    - docker tag $STAGING_IMAGE $TAG_COMMIT
    - docker push $TAG_LATEST
    - docker push $TAG_COMMIT
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner

deploy-abci-production:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record statefulset/blockchain blockchain=$TAG_COMMIT -n core-api
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner
  when: manual

deploy-did-production:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/did did=$TAG_COMMIT -n core-api
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner
  when: manual

deploy-vc-status-production:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/vc-status vc-status=$TAG_COMMIT -n core-api
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner
  when: manual

deploy-vc-verify-production:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl --kubeconfig="$KUBE_CONFIG" set image --record deployment/vc-verify vc-verify=$TAG_COMMIT -n core-api
  environment:
    name: production
  only:
    - production
  tags:
    - k8s-prd-runner
  when: manual
